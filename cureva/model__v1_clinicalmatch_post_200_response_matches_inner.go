/*
Clinical Match API

A simple API to match patients to clinical trials.

API version: 1.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1ClinicalmatchPost200ResponseMatchesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ClinicalmatchPost200ResponseMatchesInner{}

// V1ClinicalmatchPost200ResponseMatchesInner struct for V1ClinicalmatchPost200ResponseMatchesInner
type V1ClinicalmatchPost200ResponseMatchesInner struct {
	// The ID of the matched clinical trial
	TrialId *string `json:"trialId,omitempty"`
	// The name of the clinical trial
	TrialName *string `json:"trialName,omitempty"`
	Locations []Location `json:"locations,omitempty"`
	// Detailed description of the clinical trial
	Summary *string `json:"summary,omitempty"`
	// Status about the clinical trial
	Status *string `json:"status,omitempty"`
}

// NewV1ClinicalmatchPost200ResponseMatchesInner instantiates a new V1ClinicalmatchPost200ResponseMatchesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ClinicalmatchPost200ResponseMatchesInner() *V1ClinicalmatchPost200ResponseMatchesInner {
	this := V1ClinicalmatchPost200ResponseMatchesInner{}
	return &this
}

// NewV1ClinicalmatchPost200ResponseMatchesInnerWithDefaults instantiates a new V1ClinicalmatchPost200ResponseMatchesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ClinicalmatchPost200ResponseMatchesInnerWithDefaults() *V1ClinicalmatchPost200ResponseMatchesInner {
	this := V1ClinicalmatchPost200ResponseMatchesInner{}
	return &this
}

// GetTrialId returns the TrialId field value if set, zero value otherwise.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetTrialId() string {
	if o == nil || IsNil(o.TrialId) {
		var ret string
		return ret
	}
	return *o.TrialId
}

// GetTrialIdOk returns a tuple with the TrialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetTrialIdOk() (*string, bool) {
	if o == nil || IsNil(o.TrialId) {
		return nil, false
	}
	return o.TrialId, true
}

// HasTrialId returns a boolean if a field has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) HasTrialId() bool {
	if o != nil && !IsNil(o.TrialId) {
		return true
	}

	return false
}

// SetTrialId gets a reference to the given string and assigns it to the TrialId field.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) SetTrialId(v string) {
	o.TrialId = &v
}

// GetTrialName returns the TrialName field value if set, zero value otherwise.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetTrialName() string {
	if o == nil || IsNil(o.TrialName) {
		var ret string
		return ret
	}
	return *o.TrialName
}

// GetTrialNameOk returns a tuple with the TrialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetTrialNameOk() (*string, bool) {
	if o == nil || IsNil(o.TrialName) {
		return nil, false
	}
	return o.TrialName, true
}

// HasTrialName returns a boolean if a field has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) HasTrialName() bool {
	if o != nil && !IsNil(o.TrialName) {
		return true
	}

	return false
}

// SetTrialName gets a reference to the given string and assigns it to the TrialName field.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) SetTrialName(v string) {
	o.TrialName = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetLocations() []Location {
	if o == nil || IsNil(o.Locations) {
		var ret []Location
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetLocationsOk() ([]Location, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []Location and assigns it to the Locations field.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) SetLocations(v []Location) {
	o.Locations = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) SetSummary(v string) {
	o.Summary = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1ClinicalmatchPost200ResponseMatchesInner) SetStatus(v string) {
	o.Status = &v
}

func (o V1ClinicalmatchPost200ResponseMatchesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ClinicalmatchPost200ResponseMatchesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TrialId) {
		toSerialize["trialId"] = o.TrialId
	}
	if !IsNil(o.TrialName) {
		toSerialize["trialName"] = o.TrialName
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1ClinicalmatchPost200ResponseMatchesInner struct {
	value *V1ClinicalmatchPost200ResponseMatchesInner
	isSet bool
}

func (v NullableV1ClinicalmatchPost200ResponseMatchesInner) Get() *V1ClinicalmatchPost200ResponseMatchesInner {
	return v.value
}

func (v *NullableV1ClinicalmatchPost200ResponseMatchesInner) Set(val *V1ClinicalmatchPost200ResponseMatchesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ClinicalmatchPost200ResponseMatchesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ClinicalmatchPost200ResponseMatchesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ClinicalmatchPost200ResponseMatchesInner(val *V1ClinicalmatchPost200ResponseMatchesInner) *NullableV1ClinicalmatchPost200ResponseMatchesInner {
	return &NullableV1ClinicalmatchPost200ResponseMatchesInner{value: val, isSet: true}
}

func (v NullableV1ClinicalmatchPost200ResponseMatchesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ClinicalmatchPost200ResponseMatchesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


